services:
  motorsport-api-v1:
    container_name: motorsport-api-v1
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./env/app.env
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - motor-net
    tty: true
    stdin_open: true

  motorsport-api-v2:
    container_name: motorsport-api-v2
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./env/app2.env
    restart: unless-stopped
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - motor-net
    tty: true
    stdin_open: true

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: motorsport_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - motor-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d motorsport_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    tty: true
    stdin_open: true

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: unless-stopped
    networks:
      - motor-net
    tty: true
    stdin_open: true

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - motor-net
    tty: true
    stdin_open: true

networks:
  motor-net:
    driver: bridge

volumes:
  postgres_data:
